##7/19/12

#Trying out some test assemblies of the Illumina cpDNA runs received from Yale. See raw data here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/rawIlluminaData_20120605

#These libraries were mainly generated by Laura Bergner and Nikki Forrester. There notes will have be consulted for more specific data on sample origins.

#I will try assembling one of the S. vulgaris genomes since we already have  a useful reference genome assembled for this species.

#Unzipped fastq files for ALN.

#Trimmed N's and threw out short reads:
perl ~/Documents/Yale/MoranLab/projects/sequenceData/illumina/illuminaReadTrim_PE.pl Silene_vulgaris-ALN_GCCAAT_L001_R1_001.fastq Silene_vulgaris-ALN_GCCAAT_L001_R2_001.fastq 101 50

TOTAL READS	513157
TOTAL BASES	103657714
TOTAL BASES AFTER TRIMMING	96763724
EXCLUDED READS	29165
TOTAL BASIS AFTER TRIMMING AND READ EXCLUSION	93542793

#prepare input for velvet and assembly with 3 different read depths.

perl /Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69/shuffleSequences_fastq.pl Silene_vulgaris-ALN_GCCAAT_L001_R1_001.fastq.trimmed Silene_vulgaris-ALN_GCCAAT_L001_R2_001.fastq.trimmed Silene_vulgaris-ALN.shuffled.fq

head -800000 Silene_vulgaris-ALN.shuffled.fq > Silene_vulgaris-ALN.shuffled.100k.fq 

/Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69/velveth velvet_vulgarisALN 51 -fastq -shortPaired Silene_vulgaris-ALN.shuffled.100k.fq

/Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69/velvetg velvet_vulgarisALN/ -ins_length 350 -exp_cov 40 -amos_file yes


head -400000 Silene_vulgaris-ALN.shuffled.fq > Silene_vulgaris-ALN.shuffled.50k.fq

/Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69/velveth velvet_vulgarisALN_50k 51 -fastq -shortPaired Silene_vulgaris-ALN.shuffled.50k.fq

/Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69/velvetg velvet_vulgarisALN_50k/ -ins_length 350 -exp_cov 40 -amos_file yes

head -600000 Silene_vulgaris-ALN.shuffled.fq > Silene_vulgaris-ALN.shuffled.75k.fq

Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69/velveth velvet_vulgarisALN_75k 51 -fastq -shortPaired Silene_vulgaris-ALN.shuffled.75k.fq

/Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69/velvetg velvet_vulgarisALN_75k/ -ins_length 350 -exp_cov 40 -amos_file yes


#try running mira on aphidhouse

scp ../Silene_vulgaris-ALN.shuffled.100k.fq $aphidhouse:/Volumes/HD2/Dan/mira_assembly/cpDNA_vulgarisALN/vulgarisALN_in.solexa.fastq 

mira --project=vulgarisALN --job=denovo,genome,normal,solexa --fastq SOLEXA_SETTINGS -GE:tismin=50:tismax=700 -LR:fqqo=33 COMMON_SETTINGS -MI:somrnl=0

#output is fragmented into more contigs than velvet runs. Do not save. I also deleted all fastq files except the original gzipped data. For velvet assemblies, I only saved the contigs.fa and stats.txt file for each. In the following directory: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_vulgarisALN_20120719




#######################

##8/15/12

#Working on assemblies of new cp genomes.


#assemble agrostemma genome with velvet 1.1.06 using two different subsets of reads (50k and 100k).
cd /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies 

mkdir velvet_agrostemma_20120815

cd velvet_agrostemma_20120815/

ln -s /Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69 

ln -s /Users/drt_lab/Documents/Yale/MoranLab/projects/sequenceData/illumina/illuminaReadTrim_PE.pl 

perl illuminaReadTrim_PE.pl ../../rawIlluminaData_20120605/Agrostemma_githago_ACAGTG_L001_R1_001.fastq ../../rawIlluminaData_20120605/Agrostemma_githago_ACAGTG_L001_R2_001.fastq 101 50

perl velvet_1.1.06_69/shuffleSequences_fastq.pl ../../rawIlluminaData_20120605/Agrostemma_githago_ACAGTG_L001_R1_001.fastq.trimmed ../../rawIlluminaData_20120605/Agrostemma_githago_ACAGTG_L001_R2_001.fastq.trimmed agrostemma.shuffled.fq

head -800000 agrostemma.shuffled.fq > agrostemma.shuffled.100k.fq 
head -400000 agrostemma.shuffled.fq > agrostemma.shuffled.50k.fq 

velvet_1.1.06_69/velveth velvet_agrostemma_100k 51 -fastq -shortPaired agrostemma.shuffled.100k.fq 

velvet_1.1.06_69/velvetg velvet_agrostemma_100k -ins_length 350 -exp_cov 40 -amos_file yes

velvet_1.1.06_69/velveth velvet_agrostemma_50k 51 -fastq -shortPaired agrostemma.shuffled.50k.fq 

velvet_1.1.06_69/velvetg velvet_agrostemma_50k -ins_length 350 -exp_cov 40 -amos_file yes

#blast raw velvet assemblies against S. latifolia cp genome
blastn -task blastn -evalue 0.001 -db /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/organelle_genomics/chloroplastGenomeManuscript/Analysis/RepetitiveContent/blastDBs/SLAC.fsa -query velvet_agrostemma_100k/contigs.fa -out velvet_agrostemma_100k/latifoliaBlast.txt

blastn -task blastn -evalue 0.001 -db /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/organelle_genomics/chloroplastGenomeManuscript/Analysis/RepetitiveContent/blastDBs/SLAC.fsa -query velvet_agrostemma_50k/contigs.fa -out velvet_agrostemma_50k/latifoliaBlast.txt

#####################

#doing the same as above except with Lychnis.

cd /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies 

mkdir velvet_lychnis_20120815

cd velvet_lychnis_20120815/

ln -s /Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69 

ln -s /Users/drt_lab/Documents/Yale/MoranLab/projects/sequenceData/illumina/illuminaReadTrim_PE.pl 

perl illuminaReadTrim_PE.pl ../../rawIlluminaData_20120605/Lychnis_chalcedonica_TGACCA_L001_R1_001.fastq ../../rawIlluminaData_20120605/Lychnis_chalcedonica_TGACCA_L001_R2_001.fastq 101 50

perl velvet_1.1.06_69/shuffleSequences_fastq.pl ../../rawIlluminaData_20120605/Lychnis_chalcedonica_TGACCA_L001_R1_001.fastq.trimmed ../../rawIlluminaData_20120605/Lychnis_chalcedonica_TGACCA_L001_R2_001.fastq.trimmed lychnis.shuffled.fq

head -800000 lychnis.shuffled.fq > lychnis.shuffled.100k.fq 
head -400000 lychnis.shuffled.fq > lychnis.shuffled.50k.fq 

velvet_1.1.06_69/velveth velvet_lychnis_100k 51 -fastq -shortPaired lychnis.shuffled.100k.fq 

velvet_1.1.06_69/velvetg velvet_lychnis_100k -ins_length 350 -exp_cov 40 -amos_file yes

velvet_1.1.06_69/velveth velvet_lychnis_50k 51 -fastq -shortPaired lychnis.shuffled.50k.fq 

velvet_1.1.06_69/velvetg velvet_lychnis_50k -ins_length 350 -exp_cov 40 -amos_file yes


#####################

#8/27/12

#doing the same as above except with S. conoidea and S. paradoxa.

cd /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies 

mkdir velvet_conoidea_20120827
cd velvet_conoidea_20120827/

ln -s /Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69 

ln -s /Users/drt_lab/Documents/Yale/MoranLab/projects/sequenceData/illumina/illuminaReadTrim_PE.pl 

perl illuminaReadTrim_PE.pl ../../rawIlluminaData_20120605/Silene_conoidea_ATCACG_L001_R1_001.fastq ../../rawIlluminaData_20120605/Silene_conoidea_ATCACG_L001_R2_001.fastq 101 50

perl velvet_1.1.06_69/shuffleSequences_fastq.pl ../../rawIlluminaData_20120605/Silene_conoidea_ATCACG_L001_R1_001.fastq.trimmed ../../rawIlluminaData_20120605/Silene_conoidea_ATCACG_L001_R2_001.fastq.trimmed conoidea.shuffled.fq

head -800000 conoidea.shuffled.fq > conoidea.shuffled.100k.fq 
head -400000 conoidea.shuffled.fq > conoidea.shuffled.50k.fq 

velvet_1.1.06_69/velveth velvet_conoidea_100k 51 -fastq -shortPaired conoidea.shuffled.100k.fq 

velvet_1.1.06_69/velvetg velvet_conoidea_100k -ins_length 350 -exp_cov 40 -amos_file yes

velvet_1.1.06_69/velveth velvet_conoidea_50k 51 -fastq -shortPaired conoidea.shuffled.50k.fq 

velvet_1.1.06_69/velvetg velvet_conoidea_50k -ins_length 350 -exp_cov 40 -amos_file yes

###########################

cd /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies 

mkdir velvet_paradoxa_20120827
cd velvet_paradoxa_20120827/

ln -s /Users/drt_lab/Documents/Yale/MoranLab/projects/CarsonellaGenomes/CarsonellaAssemblies/Assemblers/newVelvet/velvet_1.1.06_69 

ln -s /Users/drt_lab/Documents/Yale/MoranLab/projects/sequenceData/illumina/illuminaReadTrim_PE.pl 

perl illuminaReadTrim_PE.pl ../../rawIlluminaData_20120605/Silene_paradoxa_ACTTGA_L001_R1_001.fastq ../../rawIlluminaData_20120605/Silene_paradoxa_ACTTGA_L001_R2_001.fastq 101 50

perl velvet_1.1.06_69/shuffleSequences_fastq.pl ../../rawIlluminaData_20120605/Silene_paradoxa_ACTTGA_L001_R1_001.fastq.trimmed ../../rawIlluminaData_20120605/Silene_paradoxa_ACTTGA_L001_R2_001.fastq.trimmed paradoxa.shuffled.fq

head -800000 paradoxa.shuffled.fq > paradoxa.shuffled.100k.fq 
head -400000 paradoxa.shuffled.fq > paradoxa.shuffled.50k.fq 

velvet_1.1.06_69/velveth velvet_paradoxa_100k 51 -fastq -shortPaired paradoxa.shuffled.100k.fq 

velvet_1.1.06_69/velvetg velvet_paradoxa_100k -ins_length 350 -exp_cov 40 -amos_file yes

velvet_1.1.06_69/velveth velvet_paradoxa_50k 51 -fastq -shortPaired paradoxa.shuffled.50k.fq 

velvet_1.1.06_69/velvetg velvet_paradoxa_50k -ins_length 350 -exp_cov 40 -amos_file yes


##########################

#For improvement/finishing of assemblies, start with conoidea, because summary stats suggest that its assembly is in pretty good shape.

cd /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_conoidea_20120827

mkdir finishing

cd finishing

mkdir blast

cd blast 

ln -s /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/organelle_genomics/chloroplastGenomeManuscript/Annotation/OGDRAW/SCOC.fsa

#blast contigs against published S. conica genome for comparison 
makeblastdb -in SCOC.fsa -dbtype nucl

blastn -task blastn -db SCOC.fsa -query ../../velvet_conoidea_50k/contigs.fa -out conoidea50k_vs_conica.blastn.txt -evalue 0.0001

perl BLASTparse2.pl conoidea50k_vs_conica.blastn.txt > conoidea50k_vs_conica.blastn.parsed.txt

#Using the velvet 50k assembly as a guide. The assembly returned the cp genome as a single scaffold with four contigs (NODE_3_length_121311_cov_13.684876). Roughly speaking this scaffold has the following structure: LSC (fwd), IR (fwd), SSC (rev). But there appears to be one misassembly, in which the first and second contigs are falsely joined into the scaffold. The second contig (4 kb) contains part of the IR and the 5' portion of the LSC. Based on overlap sequences at the end of contigs insected in tablet, the 5' end of contig 2 should connect to the 5' end of contig 1 (which contains the rest of the LSC). The 3' end of contig 1 should connect internally to contig 2 (again based on read overlaps) at the IR/LSC interface. The second gap appears to be the result of a tandem repeat region in the IR. This can be closed based on read overlap, but it is possible that repeat copies are being collapsed (however the resulting length is consistent with the published S. conica cp genome assembly). The thrid gap is associated with the IR/SSC boundary. IR boundaries were both inferred based on alternative read conflicts. They were also compared to the identified boundaries in S. conica and found to be identical down to the nucleotide. Summary of IR boundaries:

#IR/LSC boundary 80895/80896
#GTGCCTAATGGCATATCGGTCAAAGGTAGGGCATTTCCCATTTTTATAGGAACTTCTGTACCAGAAACAATGGTATCTCCAATTATA | GCCCCTCGGGGATGTAAAATATATCTTTTTTCACCATCCCCATAGTGTAT

#IR/SSC boundary 107672/107673
#TTATAAAGGAATCTAATTAAATTGTTTAAAAAAAAAAAAAAAAAAAATGT | AGTCCAAAAATACATAAAATAAATACAAAAAAAGATATGAGG

#IR/SSC boundary II 121015/121016

#Using the velvet scaffold and individually extracted reads from tablet, the assembly was manipulated in MEGA to generate a single closed circle in the conventional orientation: LSC/IR/SSC/IR. conoidea.fas is the assembled genome. contigs_manualCombineWorking.fas is an intermediate file showing some of the overlapping contigs/reads. Files saved in the following directory: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_conoidea_20120827/finishing/manualJoin

#comparison of assembled genome against S. conica genome suggests perfect conservation of syntenty. They both have the inversion that distinguishes them from other Silenes. They also share identical IR boudanries. The only obvious strucural difference is that conoidea appears to have retained the atpF intron.

##Run a SOAP mapping approach to check/correct assembly based on what I have done previously for Silene organella and psyllid/whitefly endosymbiont genomes. Running on Omega cluster with the following perl command:

perl ~/scratch/soapMapping/cpDNA_20120827/conoidea_recursive/soapRecursive2.pl conoidea_recursive ~/programs/soap2.21release/ ~/scratch/soapMapping/cpDNA_20120827/conoidea_recursive/conoidea.fas ~/scratch/soapMapping/cpDNA_20120827/conoidea_recursive/Silene_conoidea_ATCACG_L001_R1_001.fastq.trimmed ~/scratch/soapMapping/cpDNA_20120827/conoidea_recursive/Silene_conoidea_ATCACG_L001_R2_001.fastq.trimmed 1 1000 3 2 25 0.15 4 > soapRec.stdout 2> soapRec.stderr

#based on this first round of mapping, it became clear that there was a collapsed tandem repeat of 48 bp at the beginning of ycf2 (in the inverted repeat, so it occurrs in two places). Coordinates are 82117-82164 and 146524-146571. This sequence was manually duplicated in tandem in both places (conoidea.tr.fas). Then I re-ran the soap mapping on Omega as follows:

perl ~/scratch/soapMapping/cpDNA_20120827/conoidea_recursive2/soapRecursive2.pl conoidea_recursive2 ~/programs/soap2.21release/ ~/scratch/soapMapping/cpDNA_20120827/conoidea_recursive2/conoidea.tr.fas ~/scratch/soapMapping/cpDNA_20120827/conoidea_recursive2/Silene_conoidea_ATCACG_L001_R1_001.fastq.trimmed ~/scratch/soapMapping/cpDNA_20120827/conoidea_recursive2/Silene_conoidea_ATCACG_L001_R2_001.fastq.trimmed 1 1000 3 2 25 0.15 4 > soapRec.stdout 2> soapRec.stderr


#downloaded output to the following directory: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_conoidea_20120827/finishing/soapCorrections

#the script made a total of 6 changes in a single iteration to the sequence. Coverage looks pretty good, although there are a couple spikes that could be collapsed tandem repeats.

#The total sequence length is now 147888 bp. The coordinates for the two IRs are: 80898-107721  and 121065-147888.

#The current version of the assembly is: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_conoidea_20120827/finishing/soapCorrections/conoidea_recursive2_3.fasta

###8/28/12

#Turning my attention to the Lychnis chalcedonica cpDNA velvet assemblies (see above)

#The 50k read assembly appears to be in two main scaffolds (NODE_12_length_12886_cov_19.308397[1 contig] and NODE_31_length_111769_cov_22.889755[11 contigs]). The former contains a piece of teh LSC. The latter essentially contains the rest. Mostly co-linear with Silene latifolia, but there are some apparent inversions in the LSC.

#Based on inspection of contigs in tablet, the IR/LSC boundary appears to be at nucleotide position 41558/41559 of node_31. Made a complete LSC scaffold by combining the 3' end of node_31 with node_127 (reverse complement) from the 100 k assembly. Found overlapping region near their ends. Node_127 extends 50 bp into IR. The boundary is between positions 50 and 51 (before reverse complementing).

#it is apparent from inspection in Tablet that there are some repeat related misassemblies in the velvet data. I am going to try MIRA (running on CLC Mac in the lab).

mira --project=lychnis --job=denovo,genome,accurate,solexa --fastq SOLEXA_SETTINGS -GE:tismin=50:tismax=500 -LR:fqqo=33 COMMON_SETTINGS -MI:somrnl=0


#copied output files here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/MIRA_20120828

#c5 appears to correspond to the SSC with a bit of flanking IR on either side. This is similar to the beginning of node_31 from the velvet 50k assembly. But it differs with respect to some rearrangements at the ends, and I think the MIRA version looks better supported (all of this will have to be checked). Based on the shared sequences at the ends of mira contig c5, it appears that the IR/SSC boundaries are at positions 152/153 and 17983/17984.


#using velvet node_31 as basis for IR sequence. The SSC/IR boundary in this seq appears to be between positions 17894/17895. And as noted above the IR/LSC boundary is between positions 41558/41559. Extracted intervening region from this scaffold and reverse complemented it to produce IR scaffold.

#Currently have teh LSC, SSC, and IR in 3 tentative scaffolds. 

#The SSC has no gaps (from MIRA). 

#The IR has three gaps. 
#The first (corresponding to the gap between node31-1 and node31-2 (see tablet) appears to be related to a tandem repeat. See node_16. The gap region corresponds to pos ca. 106700 in S. latifolia (intergenic region). This can probably be patched with mira contig c155 plus miscellaneous reads (e.g, HWI-ST830:117:D0Y3HACXX:1:1101:13759:76167 1:N:0:TGACCA), which support joining across a long homopolymer) 
#There are two nearby gaps at the 5' end of the 16S rRNA, corresponding to the gaps between node_31-2 , node_31-3, and node_31-4. The 2/3 gap is flanked by a nearly identical 51 bp sequence on either side which only differs by a single G/T polymorphism. MIRA collapsed this and that seems like the right call. I don't see a clear indicartion of a tandem duplication, and the polymirphic allele appears to be at low frequency. Plus this is in 16S rRNA, which does not normally have a tandem duplication. --> Patch according to MIRA c152. The 3/4 gap is associated with tandem duplications. Both MIRA and velvet show duplications, but one of these is collapsed in MIRA c152 compared to what would be produced by joinging the adjacent velvet contigs using overlapping reads. Looking at the clear evidence of polymorphism within collapsed MIRA assembly, I think the supported solution is to join the velvet contigs using end reads extracted from tablet.

#The LSC has multiple gaps. 
#The first (ca. 26900) should be able to be merged based on overlap from inspection of contig ends in tablet (16 bp A homopolymer). This corresponds to the gap between node_31-4 and node_31-5. 
#The second can also be merged based on overlap (15 bp T homopolymer). Corresponds to pos ca. 28600 and the gap between node_31-5 and node_31-6.
#The third can also be merged based on overlap (~20 bp A homopolymer + G and 7 more As). This corresponds to pos ca. 33900 and the gap between node_31-6 and node_31-7
#Thw fourth looks like it can be merged based on overlap. But there are some oddly conflictling reads inserted into the velvet assembly. This is probably the reason for the break and should be investigated. This corresponds to pos ca. 42600 and the gap between node_31-7 and node_31-8. Looks like it is associated with partially repetitive region with accD. The published sequence from Bengt Oxelman will be helpful.
#The fifth looks like it can be merged based on overlap (ca. 18 bp homopolymer). But there are some oddly conflicting reads that should be investigated.  This corresponds to pos ca. 54200 and the gap between node_31-8 and node_31-9.
#The sixth corresponds to pos ca. 70100 and the gap between velvet 100k assembly node_127-0 and node_127-1 (in reverse orientation). This gap is associated with the an exact repeat within clpP. See node_13 in the 100k assembly. Should be able to connect with PE data. Also see published lychnis seqs from Bengt Oxelman.


#edited/joined contigs as noticed above. See /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/finishing/manualJoin/lychnis.manualJoin.inprogress.fas and /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/finishing/manualJoin/lychnis.pieces.fas. The latter just has the 3 assembled genome portions (LSC, SSC, and IR).

#combined into a single genome --> /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/finishing/manualJoin/lychnis.fas

#compared sequence against published Oxelman sequences for this species. I found two noticable discrepancies associated with tandem repeat copy number in or around accD. In both cases, I found that there was good support for making changes based on the mira assembly. First, I added two copies of a 27 bp tandem repeat around position 43,200. Second, I deleted one copy of a 33 bp tandem repeat near pos 42,200. Note that in the latter case the assembly still differs by two copies from the published Oxelman sequence, but I think there is support for the current version. Saved as /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/finishing/manualJoin/lychnis2.fas

#Should also note that significant parts of clpP sequences reported by Erixon and Oxelman (EU308522 EU308521) were not found in genome. I also blasted against the raw velvet 50k contigs to make sure they were not accidentally excluded from assembly, but did not find anything new. Suggests that these published seqs are polymorphic (i.e., present vs. absent) within L. chalcedonica, in the nuclear/mt genomes, or artefactual. 

#another thing I noticed in comparing Oxelman seqs against the assembly is that there appeared to be some homogenization of the clpP repeats. The seqs EU308520 and EU308503 correspond to my assembly, but there were some patches of divergence within clpP, where my two copies are identical but the two oxelman copies are not. Inspecting the raw contigs and variation within contigs, suggested that the published variation is also present in our dataset. Specifically, there are two obvious SNPs within node_31-8 (contig pos 8388 and 8391). And there is a separate contig (node_6). For now, I have used the published seqs to "correct" the homogenization. BUT THE STRUCTURAL ASSOCIATIONS BETWEEN VARIANTS SHOULD BE VERIFIED BY LOOKING AT PAIRED_END CONNECTIONS. The specific changes made were to replace "TTGT" with "ATGG" after the string "CCTTGATATCATATCTT" near pos. 70,200. And to substitute in the node_6 sequence around pos 50,300. Resulting genome version saved as /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/finishing/manualJoin/lychnis3.fas

#Inspecting velvet contigs in tablet to identify potential evidence for misassemblies. I noticed one thing that could be investigated further… node_31-9 pos ca. 13000. Some conflicting reads. Collapsed repeat?

###8/30/12

#Run soap mapping against current assembly on Omega

perl ~/scratch/soapMapping/cpDNA_lychnis_20120830/soapRecursive2.pl lychnis_recursive ~/programs/soap2.21release/ ~/scratch/soapMapping/cpDNA_lychnis_20120830/lychnis3.fas ~/scratch/soapMapping/cpDNA_lychnis_20120830/Lychnis_chalcedonica_TGACCA_L001_R1_001.fastq.trimmed ~/scratch/soapMapping/cpDNA_lychnis_20120830/Lychnis_chalcedonica_TGACCA_L001_R2_001.fastq.trimmed 1 1000 3 2 25 0.15 4 > soapRec.stdout 2> soapRec.stderr

#downloaded output to /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/finishing/soapCorrections

#current assembly version is /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/finishing/soapCorrections/lychnis_recursive_3.fasta

#current genome length 148081. IRs: 106709-83170 and 124542-148081. It contains two copies of clpP. These correspond to Lc1 and Lc2 from Erixon and Oxelman 2008 (but see previous note about confirming strucutural connections). However, Lc2 is not a pseudogene as reported previously. The published frameshift is definitely not found in this sequence (verified by searching individual reads). I don't know if this reflects polymorphism within the species or an earlier sequencing error. The genome also has a rearranged order that could be explained by two nested inversions, resulting in the transposition and inversion of ycf3 and accD/psaI/ycf4

##8/31/12

#reutrning to Agrostemma assembly. I quick inspection of the velvet assemblies suggests that there might be a lot more read depth variation associated with GC content. --> try running a larger assembly to close some of the low coverage regions. This could the be combined with the lower coverage assemblies.

cd  /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_agrostemma_20120815

velvet_1.1.06_69/velveth velvet_agrostemma_all 51 -fastq -shortPaired agrostemma.shuffled.fq 

velvet_1.1.06_69/velvetg velvet_agrostemma_all -ins_length 350 -exp_cov 40 -amos_file yes

#blast each of the 3 velvet assemblies against published S. latifolia cp genome.

blastn -task blastn -evalue 0.001 -db blast/SLAC.fsa -query velvet_agrostemma_50k/contigs.fa -out blast/agrostemma50k_vs_latifolia.blastn.txt

blastn -task blastn -evalue 0.001 -db blast/SLAC.fsa -query velvet_agrostemma_100k/contigs.fa -out blast/agrostemma100k_vs_latifolia.blastn.txt

blastn -task blastn -evalue 0.001 -db blast/SLAC.fsa -query velvet_agrostemma_all/contigs.fa -out blast/agrostemmaAll_vs_latifolia.blastn.txt

for fi in blast/agrostemma*; do perl blast/BLASTparse2.pl $fi > ${fi%txt}parsed.txt; done

#Manually join contigs using velvet_50k assembly as a reference

#node_126-0/1: low coverage region. patch with overlapping reads.
#node_126-1/2: weird inversion region. CHECK THIS. Patch with node_254 for 100k assembly.
#node_126-2/3: low coverage region. patch with reads grepped out of full dataset.
#node_126-3/4: low coverage region. patch with overlapping reads.
#node_126-4/5: low coverage region. patch with overlapping reads.
#node_126-5/6: weird placement of reads in according to tablet. But obvious overlap allows merging. Looks legit, but CHECK FOR TANDEM DUPLICATIONS.
#node_126-6/7: weird placement of reads in according to tablet. But obvious overlap allows merging. Looks legit, but CHECK FOR TANDEM DUPLICATIONS.

#node_126 join node_13 (reverse) based on synteny and overlap

#node_13 (reverse) join node_40 (reverse) based on synteny and overlap

#node_40 (reverse) join node_23 (reverse; position 8041 after reversing). LSC/IR boundary.

#node_23-3/2 (reverse): insert node_22 and patch with overlapping reads. node_27 suggests some kind of tandem duplication, but it appears to be a misassembly. The read alignments in the contig are a mess. But read depth is unusually high. CHECK FOR TANDEM DUPLICATIONS.

#node_23-2/1 (reverse): weird placement of reads in according to tablet. But obvious overlap allows merging. Looks legit, but CHECK FOR TANDEM DUPLICATIONS.

#node_23-1/0 (reverse): weird placement of reads in according to tablet. But obvious overlap allows merging. Looks legit, but CHECK FOR TANDEM DUPLICATIONS.

#node_23 (reverse) join node_1 based on synteny and overlap

#node_1 join node_10 (reverse) based on synteny and overlap

#node_10 (reverse) join node_42 based on synteny and overlap

#node_42 join node_19 (reverse) based on synteny and overlap

#node_19 (reverse) join node_12 (reverse; up to position 2673 after reversing) based on synteny and overlap. IR/SSC boundary is within node_12

#node_12-0/1: low coverage region. patch with overlapping reads.

#node_12-1/2: low coverage region. patch with overlapping reads.

#LSC begins at node_23-4 (plus some overlapping read info).

#node_23-4/5: low coverage region. patch with overlapping reads.

#node_23 join #node_126: I had to grep out multiple overlapping reads from this low coverage, AT-rich region. CHECK THIS REGION. This completes the LSC.

#Saved manually joined assembly: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_agrostemma_20120815/finishing/manualJoin/agrostemma.fas

###9/1/12

#looking at S. paradoxa velvet assemblies


cd /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_paradoxa_20120827 

#blast against published S. latifolia genome

blastn -task blastn -evalue 0.000001 -db blast/SLAC.fsa -query velvet_paradoxa_50k/contigs.fa -out blast/paradoxa50k_vs_latifolia.blastn.txt

blastn -task blastn -evalue 0.000001 -db blast/SLAC.fsa -query velvet_paradoxa_100k/contigs.fa -out blast/paradoxa100k_vs_latifolia.blastn.txt

perl blast/BLASTparse2.pl blast/paradoxa50k_vs_latifolia.blastn.txt > blast/paradoxa50k_vs_latifolia.blastn.parsed.txt

perl blast/BLASTparse2.pl blast/paradoxa100k_vs_latifolia.blastn.txt > blast/paradoxa100k_vs_latifolia.blastn.parsed.txt

#start manually assembling, the large contigs. Use node_315 from the 100k assembly. BUT NOTE THAT THE INVERSION IN THIS CONTIG SHOULD BE CHECKED. Other than that I will rely mostly on the 50k contigs for assembly. Delete first 50 bp of node_315 so that it starts with LSC.

#node_315-0/1 (100k): weird placement of reads in according to tablet. But obvious overlap allows merging. CHECK FOR POLYMORPHIC INDEL/TANDEM DUPLICATION.

#node_315-1/2 (100k): weird placement of reads in according to tablet. But obvious overlap allows merging. CHECK FOR POLYMORPHIC INDEL/TANDEM DUPLICATION.

#node_315-2/3 (100k): low coverage region. Joined based on read overlap. Homopolymer length estimated at 30 T's.

#node_315 (100k) join node_12 based on synteny and overlap 

#node_12 join node_10 based on synteny and overlap. Required expanding a tandem repeat identified by sequence polymorphism in overlapping reads.

#node_10-0 ca. 11,000. Corrected apparent collapsed repeat identified based  on high depth and read conflicts.

#node_10-0/1: weird placement of reads in according to tablet. But obvious overlap allows merging. CHECK FOR POLYMORPHIC INDEL ASSOCIATED WITH TANDEM DUPLICATION.

#possible misassembly or polymorphism around node_10-1 pos ~12,220. Not corrected and read mapping might not catch it. CHECK.

#Possible tandem duplication around node_10-1 pos ~20,200. CHECK

#SSC identified as node_10-1 pos pos 21584 to node_10-2 pos 7278 (reversed)

#node_10-1/2" Low coverage region. Connect based on read overlap.

#save manually joined assemblies in files with separate LSC, IR, and SSC (paradoxa.pieces.fas) and as a fully connected assembly (paradoxa.fas) in the following directory: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_paradoxa_20120827/finishing/manualJoin

#running SOAP on Omega cluster to map reads to the sequences flanking 176 bp inverted repeat associated with S. paradoxa inversion. Each flank includes 40 bp of the repeat + ~250 bp of single copy sequence.

~/programs/soap2.21release/2bwt-builder flanks.fas

~/programs/soap2.21release/soap -a ../Silene_paradoxa_ACTTGA_L001_R1_001.fastq.trimmed -b ../Silene_paradoxa_ACTTGA_L001_R2_001.fastq.trimmed -D flanks.fas.index -o paired.txt -2 single.txt -m 1 -x 1000 -g 3 -r 2 > stdout.txt 2> stderr.txt

#downloaded output to here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_paradoxa_20120827/finishing/inversionCheck

#summarized reads pairs with perl script

perl brokenPairPositions4.pl single.txt > single.parsed.txt

#The results seem to support the inversion. There are 6 PE reads supporting the first sequence and 18 supporting the second sequence. And their are none supporting either of the recombinant (i.e., ancestral or non-inverted) products.

##running soap mapping on the full assembly 

perl soapRecursive2.pl paradoxa_recursive ~/programs/soap2.21release/ paradoxa.fas ../Silene_paradoxa_ACTTGA_L001_R1_001.fastq.trimmed ../Silene_paradoxa_ACTTGA_L001_R2_001.fastq.trimmed 1 1000 3 2 25 0.15 4 > soapRec.stdout 2> soapRec.stderr

#downloaded output to: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_paradoxa_20120827/finishing/manualJoin

#had to make one manual change to match a homopolymer insertion made at the beginning of the first copy of the IR. This was presumably missed in the second copy because it occurred right at the genome end, interfering with PE mapping. Inserted an A at position 151475. Current version of assembly is: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_paradoxa_20120827/finishing/soapCorrections/paradoxa_recursive_3.mod.fasta

#The current version of the assembly is 151632 bp in length with IRs at: 82507-107960 and 126179-151632.

###############
#returning to Agrostemma assembly to do soap mapping:

perl soapRecursive2.pl agrostemma_recursive ~/programs/soap2.21release/ agrostemma.fas ../Agrostemma_githago_ACAGTG_L001_R1_001.fastq.trimmed ../Agrostemma_githago_ACAGTG_L001_R2_001.fastq.trimmed 1 1000 3 2 20 0.15 4 > stdout.txt 2> stderr.txt 

#downloaded results to: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_agrostemma_20120815/finishing/soapCorrections

#the current version of the assembly is: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_agrostemma_20120815/finishing/soapCorrections/agrostemma_recursive_3.fasta

#it is 151733 bp in length and has IRs at: 83928-109367 and 126294-151733


###1/7/13

#Begin annotation with DOGMA for the following 4 cp genome files:

/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_agrostemma_20120815/finishing/soapCorrections/agrostemma_recursive_3.fasta

/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_conoidea_20120827/finishing/soapCorrections/conoidea_recursive2_3.fasta

/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_lychnis_20120815/finishing/soapCorrections/lychnis_recursive_3.fasta

/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_paradoxa_20120827/finishing/soapCorrections/paradoxa_recursive_3.mod.fasta

#submitted each of the above files to DOGMA with default parameters for chloroplast annotation: http://dogma.ccbb.utexas.edu/


###3/26/13
#Extract gene sequences from Silene latifolia cp genome
perl genbankparse.pl slac.gb > slac.genes.fasta

#blast these seqs against each of the above 4 genomes in the following directory:/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/annotations/blast 

for fi in *fas; do makeblastdb -in $fi -dbtype nucl; blastn -task blastn -evalue 0.001 -db $fi -query slac.genes.fasta -out ${fi%finished.fas}blastn.txt; done

##3/28/13

#During the course of the DOGMA annotation I found a homopolymer assembly error in ycf1 (present in two copies --> IR). There was a frameshift in this gene when comparing the seq to conica. But when I greped out reads from the fastq file (R1 only; only searched for one direction, so this should be about 1/4 of reads: AAAAAAAAAAATCGATTAATTCGTAAATC), none of them supported the 11 bp length of the homopolymer that was in the assembly. I found 1 read supporting a 17 bp length, 9 supporting 14 bp, and 17 supporting 15 bp length (the latter is the same as in conica).

--> modify the following file by adding 4bp to both homopolymers:
Add 4 A's to position 105757
Add 4 T's to position 123025

/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/assemblies/velvet_conoidea_20120827/finishing/soapCorrections/conoidea_recursive2_3.fasta

New file saved as conoidea.fsa in the coinoidea GenBank submission directory.

Wrote a quick script (fix_tbl.pl) to correct the numbering in the conoidea.tbl file.


#using a combination of the blast output, DOGMA, and manual editing of the tbl files in response to tbl2asn errors, I generated annotation info for each of the four cp genomes (Agrostemma githago, Lychnis chalcedonica, Silene conoidea, Silene paradoxa).

#Manual modifications made to fix DOGMA tbl files

added
	--rps12 trans-splicing
	--rRNA gene names
	--RNA editing notes (psbL and ndhD start codons)
	--merged intron containing tRNAs
	--4.5S and 5S (added letter S to product)
	--added trnI-CAU explanatory note (C --> lysidine)
	--introns features

deleted
	--deleted 2 in tRNA-Met2
	--extraneous blank "notes"

#generated genbank files with tbl2asn
../tbl2asn -p . -s -V vb -t ../template.sbt

#annotations saved here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/annotations/dogma_annotations

#I also did some quick checks of the tRNA annotations with tRNA scan. The ends might be off by a bp or two in some cases, but they look good. See /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/annotations/trnas

#Annotations do not include some apparent pseudogenes (infA, rpl23, ycf15) and IR partials (ycf1 and rps19)


*******
Agrostemma notes
--small truncation of rpl20

Paradoxa notes
--matK internal frameshift
--psaI-trnS(UGA) inversion
--rps18 is divergent at both ends
--small truncation of rpl20
--clpP: loss of introns. no obvious start codon. proliferation of microsats upstream.

conoidea notes
--matK internal frameshift
--loss of rpoC1 intron
--divergence in trnfM
--retains atpF intron (unlike S. conica)

lychnis notes
--3' truncation in rps18
--3' run-on in rpl20
--clpP. two copies. both intact (frameshift not present in Oxelman pseudogene)
--3' run-on in rpl22
--ndhF 3' divergence
*******

###3/29/13

#summarized intron content across genomes in the Caryophyllales. See /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/intronContent/intronSummary.xlsx

*******************

#Inversion notes:
--Agrostemma retains the same ancestral gene order as latifolia and vulgaris
--conoidea, Lychnis, and paradoxa all have the same inversion as S. conica. Same breakpoint associated with a short repeat described in Sloan et al 2012 GBE. The repeat is present in all genomes from the tribe Sileneae (including Agrostemma) but not in Spinacia or Fagopyrum.
--Lychnis also has a unique inversion with two novel breakpoints that have not been observed before in the other Sileneae: ycf3-trnS-GGA & rbcL-accD. No indication of repeats here.

*******************
#Inverted Repeat Boundaries
Looking at changes in the IR boundaries. Documented nt positions of boundaries by manual inspection of blast2seq comparisons of each genome. Recorded in the following file: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/IR_boundaries/IR_positions.xlsx

I then manually extracted and aligned boundary sequences (5kb or 10kb as needed) to visualize shifts. See files in the above directory

Plan for figure:
--Show local gene maps of boundary LSC-IRa and SSC IRb boundaries with lines underneath showing boundary point for each species in Sileneae. Show a small tree on left depicting phylogenetic relationships of the species. Highlight species with fast clpP substituion rates


###4/2/13

Beginning evolutionary rate analysis for protein coding genes. Extract protein coding seqs from genbank files for cp genomes from the following species: Arabidopsis, Fagopyrum, Spinacia, Agrostemma, Lychnis, Silene (latifolia, conica, conoidea, noctiflora, paradoxa, vulgaris


perl genbankparse.pl gb_files/ extracted_seqs/

manually added in seqs for the following pseudogenes. For matK frameshift pseudogenes (conica, conoidea, and paradoxa), I inserted an extra T in the homopolymer to keep everything in frame. Changed "M" ambiguity to "A" in Fagopyrum matK to avoid script errors.
Silene_paradoxa_clpP
Silene_conoidea_matK
Silene_paradoxa_matK

Also added second copy of clpP in Lychnis and replaced ycf1 in Arabidopsis with the full length version.

#align codons

perl muscleCall.pl extracted_seqs/ raw_codon_alignments/

manual editing notes:
--matK: see above
--accD: deleted S. noctiflora (highly truncated)
--rpl22: deleted unalignable 5' and 3' ends
--clpP: deleted unalignable 5' end
--will need to deal with messy ycf1 and ycf2 alignments, but I am not doing that now.

Modified alignments stored in edited_codon_alignments directory

The above was done both with and without Fagopyrum (withFagopyrym and noFagopyrum directories)

Generated a concatenation of all protein coding genes except accD, cemA, clpP, ribosomal proteins, ycf1 and ycf2 from the noFagopyrum alignments

perl fastaConcatenateSmart.pl concatenations/big/ concatenations/big

manualy translated to big.fas to protein sequence in MEGA > big.aa.fas

fasta2phy.pl  big.aa.fas > big.aa.phy

Ran ProtTest v3.2-20130314 on big.aa.phy, which identified as JTT+G+I+F as the best model.

Ran RAxML 7.4.4 on amino acid and nucleotide data

/Applications/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f a -x 1 -p 1 -#100 -m PROTGAMMAIJTTF -s ../../concatenations/big.aa.phy -n big.aa -T 6

/Applications/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f a -x 1 -p 1 -#100 -m GTRGAMMA -s ../../concatenations/big.phy -n big.nuc -T 6


#generate subset file containing only 1st and 2nd codon positions
perl delete_third_codon_pos.pl concatenations/big.fas > concatenations/big.no3rd.fas

Ran RAxML (on Omega). All output files downloaded to big_no3rd directory:
~/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f a -x 1 -p 1 -#100 -m GTRGAMMA -s big.no3rd.phy -n big.no3rd -T 8 > stdout.txt 2> stderr.txt


###running additional concatenations on subsets of genes with fastaConcatenateSmart.pl. See /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/concatenations

#The converted files to phylip format, and ran codeml (paml 4.7). See the following directory for info on constraint tree and run parameters: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/PAML

###All of the above files (phylogeny and rate analysis) are here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes


##5/2/13

#Running relative ratio tests on all pairwise comparisons of the following gene files in the following directory: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/concatenations

atp.fas
ccsA.fas
cemA.fas
clpP_Lc1.fas
clpP_Lc2.fas
matK.fas
ndh.fas
pet.fas
psa_ycf3_ycf4.fas
psb.fas
rbcL.fas
rpl.fas
rpo.fas
rps.fas
ycf1.fas
ycf2.fas

#I made a "project" directory and moved it the following directory containing the RelativeRatio.bf hyphy batchfile:
/usr/local/lib/hyphy/TemplateBatchFiles

#run script to call command line hyphy: HYPHY 2.1020120320beta(MP)
#this ran relative ratio tests for all possible pairs of alignments using the following constraint tree:
(Arabidopsis_thaliana, Spinacia_oleracea, (Agrostemma_githago, (Lychnis_chalcedonica, Silene_paradoxa, (Silene_latifolia, Silene_vulgaris, (Silene_conica, Silene_conoidea), Silene_noctiflora))));
perl hyphy_relRatio_call.pl ~/Desktop/hyphy_relRatio_call.pl project/alignments/ ~/Desktop/output/ project/constraint_tree.nwk MG94CUSTOMCF3X4 010010 Local
#The script ran separate tests for syn sites and non-syn sites -> output files ending in S or N respectively.

#Moved original project directory and output directory to here:
/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/relativeRatio

#summarized likelihood scores:
perl parse_relRat_output.pl output > likelihood_summary.txt

#manipulate into summary matrices in excel containing either all genes or everything but ccsA, cemA, matK, and rbcL: likelihood_summary.xlsx

#make plots in R
likmat = as.matrix(read.table("/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/relativeRatio/likMatrix.txt"))
likmat.all = as.matrix(read.table("/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/relativeRatio/likMatrix.all.txt"))

image(likmat, col=gray.colors(100, start = 1, end = 0), lab=c(11,11,1)) #output as heatmap.linear.pdf
image(log(likmat), col=gray.colors(100, start = 1, end = 0), lab=c(11,11,1)) #output as heatmap.log.pdf
image(likmat.all, col=gray.colors(100, start = 1, end = 0), lab=c(11,11,1)) #output as heatmap.all.linear.pdf
image(log(likmat.all), col=gray.colors(100, start = 1, end = 0), lab=c(11,11,1)) #output as heatmap.all.log.pdf
image(sqrt(likmat.all), col=gray.colors(100, start = 1, end = 0), lab=c(11,11,1)) ##output as heatmap.all.sqrt.pdf


#relevant files saved here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/relativeRatio/R_plots


##5/4/13

#generated summary figure of IR boundary shifts based on previous analysis. Saved here:
/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/IR_boundaries/Fig


##5/6/13


#did a crude check for evidence of transfer of clpP, accD, ycf1, and ycf2 in S. conica, S. noctiflora, and S. paradoxa by blasting them against transcriptome assemblies. No clear evidence. There are lots of clpP paralogs but I think that is normal. There was a suprising amount of nucleotife divergence in the S. paradoxa ycf1 and ycf2 seqs. But coverage is low, so it probably reflects sequencing errors and not actual nuclear copies, but this could be explored further.

Miscelaneous blast files were saved here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/transfer_check

*****

#Made a couple quick alignments on atp1 and nad9 by adding Lychnic chlacedonica seqs to alignments from old work with Oxelman. I just wanted to check that there was no evidence of rate acceleration in Lychnis mtDNA . That appears to be the case. See files here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/lychnis_alignments

##5/14/13

#Returning to unconstrained phylogenetic analysis. For unknown reasons, the earlier RAxML runs generated bootstrap output that was often inconsistent with the original ML tree (e.g., ML nodes with 0 bootstrap bipartition support). 

#Generate bootstrap files based on concatenated plastid genes without 3rd codon positions (see big.no3rd.phy above)
/home/mdi/moran/ds799/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f j -b 1 -#100 -s big.no3rd.phy -m GTRGAMMA -n bootstrap -T 8

#optimize tree for each bootstrap alignment
for num in {0..99}; do ~/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f T -p 1 -s big.no3rd.phy.BS${num} -n BS${num} -m GTRGAMMA -T 8; done

#same problem (not surprisingly). The bootstrap files consistently conflict with the original tree.

#Try generating my own bootstrap alignments and build trees.
perl makeBootstrapAlignments.pl /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/concatenations/big.no3rd.fas 100 manualBootstraps_no3rd/big.no3rd

for num in {1..100}; do ~/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f T -p 1 -s big.no3rd.BS${num} -n BS${num} -m GTRGAMMA -T 8; done

cat RAxML_bestTree.BS* > ALL_TREES.nwk

~/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f b -t RAxML_bestTree.big.no3rd -z ALL_TREES.nwk -m GTRGAMMA -n big.no3rd.manualBootstrap -T 2

#this looks more reasonable. There is some (albeit weak) support for the ML topology. It looks like their could be a bug in RAxML's algorithm to generate bootstrap alignments.

#repeat above steps for the aa and nuc alignments.

perl makeBootstrapAlignments.pl /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/concatenations/big. 100 manualBootstraps_nuc/big.nuc

perl makeBootstrapAlignments.pl /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/concatenations/big.fas 100 manualBootstraps_nuc/big.nuc

for num in {1..100}; do ~/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f T -p 1 -s big.nuc.BS${num} -n BS${num} -m GTRGAMMA -T 8; done
cat RAxML_bestTree.BS* > ALL_TREES.nwk
~/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f b -t RAxML_bestTree.big.nuc  -z ALL_TREES.nwk -m GTRGAMMA -n big.nuc.manualBootstrap -T 2

for num in {1..100}; do ~/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f T -p 1 -s big.aa.BS${num} -n BS${num} -m PROTGAMMAIJTTF -T 8; done
cat RAxML_bestTree.BS* > ALL_TREES.nwk
~/programs/RAxML-7.4.4/raxmlHPC-PTHREADS-SSE3 -f b -t RAxML_bestTree.big.aa  -z ALL_TREES.nwk -m GTRGAMMA -n big.aa.manualBootstrap -T 2


Relevant files stored here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/RAxML/manualBootstraps

***************

#Running MrBayes v3.2.1 on Omega. Compiled as follows

autoconf
./configure --with-beagle=no
make

#converted big.no3rd.fas to big.no3rd.nex with Mesquite (with some manually editing for MrBayes compatibility)

~/programs/mrbayes_3.2.1/src/mb
MrBayes > execute big.no3rd.nex

   Executing file "big.no3rd.nex"
   UNIX line termination
   Longest line length = 30070
   Parsing file
   Expecting NEXUS formatted file
   Reading data block
      Allocated taxon set
      Allocated matrix
      Defining new matrix with 10 taxa and 30048 characters
      Data is Dna
      Gaps coded as -
      Missing data coded as ?
      Data matrix is not interleaved
      Taxon  1 -> Silene_conica
      Taxon  2 -> Silene_latifolia
      Taxon  3 -> Silene_paradoxa
      Taxon  4 -> Agrostemma_githago
      Taxon  5 -> Silene_noctiflora
      Taxon  6 -> Lychnis_chalcedonica
      Taxon  7 -> Arabidopsis_thaliana
      Taxon  8 -> Silene_vulgaris
      Taxon  9 -> Silene_conoidea
      Taxon 10 -> Spinacia_oleracea
      Successfully read matrix
      Setting default partition (does not divide up characters)
      Setting model defaults
      Seed (for generating default start values) = 1368554882
      Setting output file names to "big.no3rd.nex.run<i>.<p|t>"
   Exiting data block
   Reached end of file


MrBayes > lset nst=6 rates=invgamma

   Setting Nst to 6
   Setting Rates to Invgamma
   Successfully set likelihood model parameters


MrBayes > mcmc ngen=500000 samplefreq=1000 printfreq=1000 diagnfreq=10000

MrBayes > sump
MrBayes > sumt

##Re-ran the exact same thing as above with big.nuc.nex

##Also ran a amino acid analysis
MrBayes > execute big.aa.nex
MrBayes > prset aamodelpr = fixed(jones)
MrBayes > mcmc ngen=200000 samplefreq=1000 printfreq=1000 diagnfreq=10000
MrBayes > sump
MrBayes > sumt

##Output stored here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/MrBayes/cpDNA_20130514

##I want genome-wide dN/dS estimates. Make concatenated alignment of all edited gene alignments (except accD; deleted Lychnis clpP-2)

cd /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/concatenations

perl ../../perl/fastaConcatenateSmart.pl all all

perl ../../perl/fasta2phy.pl all.fas > all.phy

#ran codeml in the following directory
/Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/analysis/codingGenes/noFagopyrum/PAML/all

###5/15/13

#Estimating median coverage for each of the four cp genomes in the following manner. Use soap map summaries from assembly correction process. Exclude first 500 bp and last copy of the IR. Divide values from remaining IR copy by 2. Take median of resulting values:

Agrostemma -> 235
Lychnis -> 2497
S. conoidea -> 147
S. paradoxa -> 239


###8/10/13

#Submitting sequences to GenBank.

#generated template file here: http://www.ncbi.nlm.nih.gov/WebSub/template.cgi

#Ran tbl2asn from each directory here: /Users/drt_lab/Documents/UVA/Taylor_Lab/Projects/PostDissertation/cpGenomes/annotations/genbankSubmission/

../tbl2asn -p . -s -V vb -t ../template.sbt

#e-mailed .sqn files to gb-sub@ncbi.nlm.nih.gov

